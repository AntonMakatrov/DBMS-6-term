--Task 2 test
ALTER TABLE GROUPS DISABLE ALL TRIGGERS;
ALTER TABLE STUDENTS DISABLE ALL TRIGGERS;

ALTER TRIGGER GROUPS_CHECK_TRIGGER ENABLE;

INSERT INTO GROUPS(name) VALUES('group 1');
INSERT INTO GROUPS(name) VALUES('group 2');
INSERT INTO GROUPS(name) VALUES('group 3');

SELECT * FROM GROUPS;
--delete from GROUPS

--Not unique name
INSERT INTO GROUPS(name) VALUES('C');

--Not unique id
INSERT INTO GROUPS(id, name) VALUES(1, 'D');

--Task 3 test
ALTER TABLE GROUPS DISABLE ALL TRIGGERS;
ALTER TABLE STUDENTS DISABLE ALL TRIGGERS;
ALTER TRIGGER FK_STUDENTS_GROUPS_TRIGGER ENABLE;

SELECT * FROM STUDENTS;
SELECT * FROM GROUPS;

DELETE FROM GROUPS WHERE id = 3;

SELECT * FROM STUDENTS;
SELECT * FROM GROUPS;

--Task 4 test
ALTER TABLE GROUPS DISABLE ALL TRIGGERS;
ALTER TABLE STUDENTS DISABLE ALL TRIGGERS;
ALTER TRIGGER STUDENTS_LOGS_TRIGGER ENABLE;
ALTER TRIGGER GROUPS_C_VAL_UPDATE_TRIGGER ENABLE;

UPDATE STUDENTS SET GROUP_ID = 2 WHERE name = 'A';

SELECT * FROM STUDENTS;
SELECT * FROM GROUPS;
SELECT * FROM LOGS;

--Task 5 test
BEGIN
    BACKUP_INFO(BACKUP_TIME  => TO_TIMESTAMP('13-MAR-23 01.00.00.000000000 AM'));
END;

BEGIN
    BACKUP_INFO(BACKUP_TIME  => TO_TIMESTAMP(CURRENT_TIMESTAMP - 10));
END;

SELECT * FROM STUDENTS;
SELECT * FROM GROUPS;
SELECT * FROM LOGS;

--Task 6 test
ALTER TRIGGER STUDENTS_CHECK_TRIGGER ENABLE;
ALTER TRIGGER GROUPS_C_VAL_UPDATE_TRIGGER ENABLE;
ALTER TABLE GROUPS DISABLE ALL TRIGGERS;

INSERT INTO STUDENTS(name, group_id) VALUES('A', 1);
INSERT INTO STUDENTS(name, group_id) VALUES('B', 2);
INSERT INTO STUDENTS(name, group_id) VALUES('C', 2);
INSERT INTO STUDENTS(name, group_id) VALUES('D', 1);
INSERT INTO STUDENTS(name, group_id) VALUES('E', 2);
INSERT INTO STUDENTS(name, group_id) VALUES('F', 1);
INSERT INTO STUDENTS(name, group_id) VALUES('G', 1);
INSERT INTO STUDENTS(name, group_id) VALUES('R', 3);
SELECT * FROM STUDENTS;
SELECT * FROM GROUPS;


delete from groups;
delete from students;
ALTER TABLE GROUPS ENABLE ALL TRIGGERS;
ALTER TABLE STUDENTS ENABLE ALL TRIGGERS;